import java_cup.runtime.*;

terminal PLUS, MINUS, LPAREN, RPAREN, EQUAL, TIMES, DIVIDE, MOD, UMINUS, LABEL, COLON, SEMI, LBRACKET, RBRACKET, ERROR;
terminal Integer NUMBER;

non terminal Integer expr;
non terminal d, program, stmt_list, stmt, assignment, lvalue, label, expr_list, expr_part;

precedence left PLUS, MINUS;
precedence left TIMES, DIVIDE, MOD;
precedence left UMINUS;

start with program;

program ::= stmt_list;

stmt_list ::= stmt_list stmt
		| stmt;

stmt ::= assignment;

assignment ::= lvalue EQUAL expr_part;

lvalue ::= label
		| label COLON label
		| label LBRACKET expr_part RBRACKET;

label ::= LABEL;



expr_list ::= expr_list expr_part
		| expr_part;

expr_part ::= expr:e {: System.out.println("EQUALS TO: " + e); :}
        | error;

expr    ::= expr:e1 PLUS expr:e2    {: RESULT = new Integer(e1.intValue() + e2.intValue()); :}
        | expr:e1 MINUS expr:e2     {: RESULT = new Integer(e1.intValue() - e2.intValue()); :}
        | expr:e1 TIMES expr:e2     {: RESULT = new Integer(e1.intValue() * e2.intValue()); :}
        | expr:e1 DIVIDE expr:e2    {: RESULT = new Integer(e1.intValue() / e2.intValue()); :}
        | expr:e1 MOD expr:e2       {: RESULT = new Integer(e1.intValue() % e2.intValue()); :}
        | NUMBER:n                  {: RESULT = n; :}
        | MINUS expr:e              {: RESULT = new Integer(0 - e.intValue()); :} %prec UMINUS
        | LPAREN expr:e RPAREN      {: RESULT = e; :};