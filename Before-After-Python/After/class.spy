class MyClass:
    # Add an access modifiers
    public a: int
    private b: str
    protected c: bool

    # remove self from every function/constructor
    # now 'self' will be as 'this' in Java/C#
    def __init__(a: int):
        self.a = a
    
    # all overloading will be in following form: def overload 'operator'(other): ...

    # Binary operators
    def +(x: MyClass, y: MyClass) -> MyClass:
        return x.a + y.a
    
    def +(x: int, y: MyClass) -> MyClass:
        y.a += x
        return y
    
    def +(x: MyClass, y: int) -> MyClass:
        return y + x;

    # Comparison operators
    def >(x: MyClass, y: MyClass) -> bool:
        if(x.a > y.a):
            return True
        else:
            return False

    # Assignment operators => their going to be implicitly overloaded when + or - will b overloaded
    
    # Unary operators
    def -(x: MyClass) -> MyClass:
        x.a = x.a * (-1)
        return x
    def +(x: MyClass) -> MyClass:
        return x